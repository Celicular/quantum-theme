@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700;800;900&family=Rajdhani:wght@300;400;500;600;700&family=Space+Mono:wght@400;700&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  overflow: hidden;
  background-color: #010108;
  color: #ffffff;
  font-family: 'Rajdhani', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overscroll-behavior: none; /* Prevents pull-to-refresh on mobile */
  touch-action: manipulation; /* Improves touch response */
}

code {
  font-family: 'Space Mono', source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

#root {
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100); /* Mobile viewport height fix */
  width: 100vw;
}

/* Add script to fix mobile viewport height issues */
@media (max-width: 768px) {
  html, body {
    height: -webkit-fill-available;
  }
  
  #root {
    min-height: -webkit-fill-available;
  }
}

/* Animation keyframes */
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-15px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Animation utility classes */
.float {
  animation: float 6s ease-in-out infinite;
}

.pulse {
  animation: pulse 4s ease-in-out infinite;
}

.rotate {
  animation: rotate 20s linear infinite;
}

.gradient-shift {
  background-size: 200% 200%;
  animation: gradient-shift 10s ease infinite;
}

/* Mobile optimizations for animations */
@media (max-width: 768px) {
  .float {
    animation: float 6s ease-in-out infinite;
  }
  
  .pulse {
    animation: pulse 5s ease-in-out infinite; /* Slightly slower on mobile */
  }
  
  .rotate {
    animation: rotate 30s linear infinite; /* Slower rotation on mobile */
  }
  
  .gradient-shift {
    animation: gradient-shift 15s ease infinite; /* Slower gradient on mobile */
  }
}

/* Glow effects */
.text-glow {
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.5),
               0 0 10px rgba(150, 220, 255, 0.5),
               0 0 15px rgba(100, 200, 255, 0.3),
               0 0 20px rgba(50, 150, 255, 0.2);
}

.box-glow {
  box-shadow: 0 0 5px rgba(255, 255, 255, 0.5),
              0 0 10px rgba(150, 220, 255, 0.5),
              0 0 15px rgba(100, 200, 255, 0.3),
              0 0 20px rgba(50, 150, 255, 0.2);
}

/* Reduce glow effects on mobile for better performance */
@media (max-width: 768px) {
  .text-glow {
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.5),
                 0 0 10px rgba(150, 220, 255, 0.4);
  }
  
  .box-glow {
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5),
                0 0 10px rgba(150, 220, 255, 0.4);
  }
}

/* Specific font styles */
h1, h2, h3, h4, h5, h6 {
  font-family: 'Orbitron', sans-serif;
  letter-spacing: 0.05em;
  font-weight: 700;
}

p, span, div {
  font-family: 'Rajdhani', sans-serif;
  letter-spacing: 0.03em;
  font-weight: 500;
}

button, input, select, textarea {
  font-family: 'Rajdhani', sans-serif;
  letter-spacing: 0.03em;
  font-weight: 600;
}

/* Search bar specific styles - improved design */
.search-input {
  background: rgba(20, 30, 70, 0.3);
  border: 1px solid rgba(100, 180, 255, 0.4);
  color: #eaf5ff;
  font-family: 'Rajdhani', sans-serif;
  font-weight: 500;
  letter-spacing: 1px;
  transition: all 0.3s ease;
  backdrop-filter: blur(5px);
  box-shadow: 0 0 10px rgba(50, 120, 220, 0.2), 
              inset 0 0 5px rgba(30, 80, 180, 0.3);
}

.search-input::placeholder {
  color: rgba(150, 200, 255, 0.7);
}

.search-input:focus {
  background: rgba(25, 40, 90, 0.4);
  border-color: rgba(120, 200, 255, 0.8);
  box-shadow: 0 0 15px rgba(80, 150, 255, 0.3),
              inset 0 0 8px rgba(40, 100, 200, 0.2);
  outline: none;
}

/* Optimize for mobile devices - reduce blur effects */
@media (max-width: 768px) {
  .search-input {
    backdrop-filter: blur(3px);
    box-shadow: 0 0 8px rgba(50, 120, 220, 0.2), 
                inset 0 0 4px rgba(30, 80, 180, 0.3);
  }
  
  .search-input:focus {
    box-shadow: 0 0 10px rgba(80, 150, 255, 0.3),
                inset 0 0 6px rgba(40, 100, 200, 0.2);
  }
}

/* Add JavaScript to fix mobile viewport height issues */
/* This script should be added to your index.js or App.js file:
  useEffect(() => {
    // First we get the viewport height and we multiply it by 1% to get a value for a vh unit
    let vh = window.innerHeight * 0.01;
    // Then we set the value in the --vh custom property to the root of the document
    document.documentElement.style.setProperty('--vh', `${vh}px`);
    
    // We listen to the resize event
    window.addEventListener('resize', () => {
      // We execute the same script as before
      let vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', `${vh}px`);
    });
  }, []);
*/ 